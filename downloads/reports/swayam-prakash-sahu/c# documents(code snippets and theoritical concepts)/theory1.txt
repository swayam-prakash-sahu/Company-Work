Float Type Precision
----------------------------
float ~6-9 digits
double ~15-17 digits
decimal 28-29 digits


Console.WriteLine('b');
Console.WriteLine("Hello World!");
Console.WriteLine(123);
Console.WriteLine(0.25F); //To create a float literal, append the letter F after the number. In this context, the F is called a literal suffix.
Console.WriteLine(2.625);//The compiler defaults to a double literal
Console.WriteLine(12.39816m);//To create a decimal literal, append the letter m after the number. In this context, the m is called a literal suffix.

Console.WriteLine(true);
Console.WriteLine(false);




Hard-coded values are values that are constant and unchanged throughout the execution of the program.


A variable is a container for storing a type of value. A variable name is a label that the compiler assigns to a memory address.


To create a new variable,                 string firstName;


Variable names should use camel case, which is a style of writing that uses a lower-case letter at the beginning of the first word and an upper-case letter at the beginning of each subsequent word. For example, string thisIsCamelCase;.


char userOption;

int gameScore;

decimal particlesPerMillion;

bool processedCustomer;




string firstName;
firstName = "Bob";
Console.WriteLine(firstName);
firstName = "Liem";
Console.WriteLine(firstName);
firstName = "Isabella";
Console.WriteLine(firstName);
firstName = "Yasmin";
Console.WriteLine(firstName);




string name = "Bob";
int messages = 3;
decimal temperature = 34.4m;

Console.Write("Hello, ");
Console.Write(name);
Console.Write("! You have ");
Console.Write(messages);
Console.Write(" messages in your inbox. The temperature is ");
Console.Write(temperature);
Console.Write(" celsius.");



Hello, Bob! You have 3 messages in your inbox. The temperature is 34.4 celsius.


=======================================================================




Create string data containing tabs, new lines, and other special characters
Create string data containing Unicode characters
Combine string data into a new string value via concatenation
Combine string data into a new string value via interpolation


control how your data is displayed to end users of your applications.




An escape character sequence is an instruction to the runtime to insert a special character that will affect the output of your string. In C#, the escape character sequence begins with a backslash \ followed by the character you're escaping.


\n sequence will add a new line, and a \t sequence will add a tab.


Format output using character escape sequences


Console.WriteLine("Hello\nWorld!");
Console.WriteLine("Hello\tWorld!");

Console.WriteLine("Hello \"World\"!");


Console.WriteLine("c:\\source\\repos");


Verbatim string literal


Console.WriteLine(@" c:\source\repos
(this is where your code goes)");

Console.Write(@"c:\invoices");


Unicode escape characters


// Kon'nichiwa World
Console.WriteLine("\u3053\u3093\u306B\u3061\u306F World!");




Concatenate a literal string and a variable



string firstName = "Bob";
string message = "Hello " +  firstName;
Console.WriteLine(message);



string firstName = "Bob";
string greeting = "Hello";
string message = greeting + " " + firstName + "!";
Console.WriteLine(message);